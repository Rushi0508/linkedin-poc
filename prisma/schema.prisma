generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  name            String?
  email           String           @unique
  password        String
  linkedinDetails LinkedinDetails?
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt

  // Relations
  trackPersons TrackPerson[]
  searchUrls   SearchUrls[]
}

model LinkedinDetails {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  userId    String   @unique @db.ObjectId
  email     String
  name      String?
  headline  String?
  avatar    String?
  username  String?
  accountId String?
  isPremium Boolean?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Relations
  user      User     @relation(fields: [userId], references: [id])
}

model TrackPerson {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  addedBy    String   @db.ObjectId
  username   String   @unique
  name       String
  avatar     String?
  title      String
  location   String
  profileUrl String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  // Relations
  addedByUser User         @relation(fields: [addedBy], references: [id])
  searchUrls  SearchUrls[]
}

model SearchUrls {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  url           String   @unique
  title         String
  userId        String   @db.ObjectId
  trackPersonId String   @db.ObjectId
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  // Relations
  user        User        @relation(fields: [userId], references: [id])
  trackPerson TrackPerson @relation(fields: [trackPersonId], references: [id])
}
